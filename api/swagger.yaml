openapi: 3.0.1
info:
  title: Swagger for DoH Daemon
  description: This is a "DNS over HTTP" (DoH) implementation written in Go.
  contact:
    email: dev@phunsites.net
  license:
    name: BSD 3-Clause 'New' or 'Revised' License
    url: https://github.com/gpdm/DoH/blob/master/LICENSE
  version: "0.5"
externalDocs:
  description: Source Code on Github
  url: https://github.com/gpdm/DoH
servers:
- url: https://localhost:443/
- url: http://localhost:80/
tags:
- name: doh
  description: '"DNS over HTTP" requests'
- name: status
  description: 'status interface'
paths:
  /dns-query:
    get:
      tags:
      - doh
      summary: RFC8484-compliant DNS query via GET
      externalDocs:
        description: Read more on the HTTP GET request in RFC8484.
        url: https://tools.ietf.org/html/rfc8484#section-4.1
      operationId: dnsQueryGet
      parameters:
      - name: dns
        in: query
        description: DNS request in RFC1035-style wire format, payload is URL-encoded without
          padding as per RFC4648
        required: true
        schema:
          type: string
        examples:
          www.example.com:
            value: AAABAAABAAAAAAAAA3d3dwdleGFtcGxlA2NvbQAAAQAB
            summary: A sample request to resolve www.example.com
      responses:
        200:
          description: successful operation
          content:
            application/dns-message:
              schema:
                type: string
                format: binary
                items:
                  $ref: '#/components/schemas/dnsResponse'
        400:
          description: 'Bad Request: Request Payload or Request Parameters are invalid'
          content: {}
    post:
      tags:
      - doh
      summary: RFC8484-compliant DNS query via POST
      externalDocs:
        description: Read more on the HTTP POST request in RFC8484.
        url: https://tools.ietf.org/html/rfc8484#section-4.1
      operationId: dnsQueryPost
      requestBody:
        content:
          application/dns-message:
            schema:
              type: string
              format: binary
            examples:
              www.example.com:
               externalValue: 'https://github.com/gpdm/DoH/raw/master/testdata/A_www.example.com.bin'
               summary: A sample request to resolve www.example.com
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/dns-message:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dnsResponse'
        400:
          description: 'Bad Request: Request Payload or Request Parameters are invalid'
          content: {}
        415:
          description: 'Unsupported Media Type: client must support "application/dns-message" media type'
          content: {}
      x-codegen-request-body-name: raw
  /status:
    get:
      tags:
      - status
      summary: Returns Service Health Status
      operationId: status
      responses:
        200:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                format: text
components:
  schemas:
    dnsResponse:
      type: string
      format: binary